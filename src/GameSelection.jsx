import React from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import './CssFiles/GameSelection.css';
import { Helmet } from 'react-helmet';
import { Button } from "@headlessui/react"; //download this package using "npm install @headlessui/react"
import {doc, getDoc, setDoc, updateDoc, increment} from "firebase/firestore";
import { auth, db } from "./firebase"; //Importing firebase instance

const games = [
  { name: "Blackjack", description: "Test your card skills against the dealer.", path: "/blackjack" },
  { name: "Roulette", description: "Spin the wheel and see where luck takes you.", path: "/roulette" },
  { name: "Slots", description: "Pull the lever and match the reels.", path: "/slots" }
];

const GameSelection = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const { username } = location.state || {}; // Extracting the username

  //Function to store the number of times user has accessed specific game in their own Firebase document. 
  const handleGameClick = async (gameName, gamePath) => { 
    const user = auth.currentUser; //retrieves the current logged in user's ID from the database

    //block below doesn't allow the user to progress to play the game if not logged in.
    if(!user) 
    {
      console.error("User not logged in.");  
      return;
    }
    const userID = user.uid; //unique ID for each user generated by firebase
    const gameRef = doc(db, "Players", userID, "gameStats", gameName); //creating a reference to the document in  the db

    try{
      const gameSnap = await getDoc(gameRef); //retrieves the chosen document from Firestore

      if (gameSnap.exists()) //checks if the game has been played before in the gameStats subcollection
      {
        await updateDoc(gameRef, {clickCount: increment(1)}); //incrementing the clickcount variable by one
      }
      //the else block below will assume the player has never played the games before, creating a new document 
      else
      {
        await setDoc(gameRef, {name: gameName, clickCount: 1});
      }
      
    }
    catch (error) //in case of the firebase database failing, returns an error. 
    {
      console.error("Error updating game click count:", error)
    }

  }

  return (
    <>
      <Helmet>
        <title>Game Selection</title>
      </Helmet>

      <div className='GS-Container'>
        <h1 className='text-3xl font-bold mb-6'>Game Selection Page</h1>
        {username ? (
          <div>Welcome, {username}!</div>
        ) : (
          <div>No username set yet. Please set a username in the entry page.</div>
        )}

        <div className='grid grid-cols-1 md:grid-cols-3 gap-6'>
          {games.map((game) => (
            <div
              key={game.name}
              onClick={() => navigate(game.path)}
              className='game-card'
            >
              <div className='game-card-content'>
                <h2 className='text-2xl font-semibold mb-2'>{game.name}</h2>
                <p className='text-sm text-gray-400'>{game.description}</p>
                <Button className='mt-4 bg-blue-600 hover:bg-blue-700'>Play</Button>
              </div>
            </div>
          ))}
        </div>
        
        <div className="mt-8 text-center">
          <Button 
            onClick={() => navigate("/stats")}
            className="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded"
          >
            View Stats Page
          </Button>
        </div>

      </div>
    </>
)};


export default GameSelection;